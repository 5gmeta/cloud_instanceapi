name: Deploy discovery module and test it
on: [push]
jobs:
  Deploy-Discovery-and-test:
    #runs-on: self-hosted
    runs-on: self-hosted
    steps:
      
    - name: Get current repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.FIVEGMETATOKEN }}
        ref: 'vicomtech_dev'
        path: ${{ github.workspace }}/cloudinstance_api


    - name: Checkout discovery repo
      uses: actions/checkout@v2
      with:
        repository: 5gmetadmin/discovery
        token: ${{ secrets.FIVEGMETATOKEN }}
        path: ${{ github.workspace }}/discovery
        ref: 'main'

    - name: Checkout registration repo
      uses: actions/checkout@v2
      with:
        repository: 5gmetadmin/registration
        token: ${{ secrets.FIVEGMETATOKEN }}
        path: ${{ github.workspace }}/registration
        ref: 'main'


    - name: Checkout integration_tests repo
      uses: actions/checkout@v3
      with:
        repository: 5gmetadmin/integration_tests
        token: ${{ secrets.FIVEGMETATOKEN }}
        path: ${{ github.workspace }}/integration_tests
        ref: "fmogollon_develop"


    - name: Checkout dataflow_cloud repo
      uses: actions/checkout@v3
      with:
        repository: 5gmetadmin/dataflow_cloud
        token: ${{ secrets.FIVEGMETATOKEN }}  
        ref: 'main'
        path: ${{ github.workspace }}/dataflow_cloud        
  
    - name: Checkout orchestrator repo
      uses: actions/checkout@v3
      with:
        repository: 5gmetadmin/orchestrator
        token: ${{ secrets.FIVEGMETATOKEN }}
        ref: 'main'
        path: ${{ github.workspace }}/orchestrator        


    - name: Check IP
      run: curl https://api.ipify.org
    
    - name: Get current ip
      run: |
        name=`hostname`
        local="vicomtech"
        if [[ $name == *"$local"* ]] ; then ipe=`ip route | grep -v default | grep metric | grep enp | grep src | awk '{print $9}'` ; else  ipe=`ip route | grep -v default | grep metric | grep eth0 | grep src | awk '{print $9}' | tail -n +2` ; fi
        echo $ipe
    
    - name: Copy edge database extra stuff
      working-directory: ${{ github.workspace }}/integration_tests/dataflow_tests/tools
      run: |
        cp -r ${{ github.workspace }}/integration_tests/dataflow_tests/tools/utils/registration/edge/database ${{ github.workspace }}/registration/deploy/edge
        cp -r ${{ github.workspace }}/integration_tests/dataflow_tests/tools/utils/registration/edge/config ${{ github.workspace }}/registration/deploy/edge
        cp -r ${{ github.workspace }}/integration_tests/dataflow_tests/tools//utils/registration/edge/docker-compose.yaml ${{ github.workspace }}/registration/deploy/edge
        cp -r ${{ github.workspace }}/dataflow_cloud/src/mysql/dataflow_DB_CLOUD_mysql.sql ${{ github.workspace }}/registration/deploy/edge/database/sql/clouddb.sql
        rm ${{ github.workspace }}/registration/deploy/edge/compose.yaml
  
  
    #- name: List destination
    #  run: dest=$(ls ./registration/deploy/edge) ; echo $dest
    
    - name: Build edge database
      working-directory: ${{ github.workspace }}/registration/deploy/edge/database
      run: |
        docker-compose down
        docker-compose build --no-cache
        docker-compose up -d
        sleep 60



    - name: Build edge registration api
      working-directory: ${{ github.workspace }}/registration/src/edge
      run:  |
        sed -i "s/8080/12346/g" swagger_server/__main__.py 
        docker build -t registrationapi:latest . --no-cache
      
    
    - name: Deploy edge registration api
      working-directory: ${{ github.workspace }}/registration/deploy/edge
      run: |
        docker-compose down
        docker-compose build --no-cache
        docker-compose up -d
        sleep 20

    - name: Deploy discovery service
      working-directory: ${{ github.workspace }}/discovery/src
      run: |
        python -m pip install --upgrade pip
        sed -i "/\- url\: http\:\/\/5gmeta-platform\.eu\/discovery-api/c\\- url: http\:\/\/127.0.0.1:8282" python-flask-server-generated/swagger_server/swagger/swagger.yaml 
        sed -i "/\- url\: https\:\/\/5gmeta-platform\.eu\/discovery-api/c\\- url: http\:\/\/127.0.0.1:8282" python-flask-server-generated/swagger_server/swagger/swagger.yaml 
        docker-compose down
        docker-compose build --no-cache
        docker-compose up -d
        sleep 60

    - name: Register MEC
      working-directory: ${{ github.workspace }}/integration_tests/dataflow_tests/tools/examples/discovery
      run: |
        sleep 10
        name=`hostname`
        local="vicomtech"
        laptop="LPT"
        if [[ $name == *"$local"* || $name == *"$laptop"* ]] ; then ipe=`ip route | grep -v default | grep metric | grep proto | grep src | awk '{print $9}'` ; else ipe=`ip route | grep -v default | grep metric | grep eth0 | grep src | awk '{print $9}' | tail -n +2` ; fi
        for i in *.* ; do sed -i "s/127.0.0.1/$ipe/g" $i ; done
        python3 sb_register_mec.py
        /bin/bash register_northbound_services.sh
  

    - name: Deploy edgeinstanceapi
      working-directory: ${{ github.workspace }}/orchestrator/api
      run: |
        cp ${{ github.workspace }}/integration_tests/dataflow_tests/tools/utils/orchestrator/docker-compose.yaml .
        sed s/5000/5001/g edgeinstance-api/openapi_server/__main__.py > edgeinstance-api/openapi_server/__main__.py.new
        mv edgeinstance-api/openapi_server/__main__.py.new edgeinstance-api/openapi_server/__main__.py
        docker-compose down
        docker-compose up -d --build
        sleep 10        


    - name: Deploy cloud_instanceapi
      working-directory: ${{ github.workspace }}/cloudinstance_api/deploy
      run: |
        name=`hostname`
        local="vicomtech"
        laptop="LPT"
        if [[ $name == *"$local"* || $name == *"$laptop"* ]] ; then ipe=`ip route | grep -v default | grep metric | grep proto | grep src | awk '{print $9}'` ; else ipe=`ip route | grep -v default | grep metric | grep eth0 | grep src | awk '{print $9}' | tail -n +2` ; fi  
        sed -i "/\- url\: https\:\/\/5gmeta-platform\.eu\/cloudinstance-api/c\\- url: http\:\/\/127.0.0.1:5000/" ../api/cloudinstance-api/openapi_server/openapi/cloudinstance.yaml 
        sed -i "/\- url\: http\:\/\/5gmeta-platform\.eu\/cloudinstance-api/c\\- url: http\:\/\/127.0.0.1:5000/" ../api/cloudinstance-api/openapi_server/openapi/cloudinstance.yaml 
        sed "s/discovery-api.vicomtech.svc.cluster.local:8080\/discovery-api/$ipe:8282/g" ../api/cloudinstance-api/openapi_server/controllers/instances_controller.py > ../api/cloudinstance-api/openapi_server/controllers/instances_controller.py.new
        mv ../api/cloudinstance-api/openapi_server/controllers/instances_controller.py.new ../api/cloudinstance-api/openapi_server/controllers/instances_controller.py
        sed "s/discovery-api.vicomtech.svc.cluster.local:8080\/discovery-api/$ipe:8282/g" ../api/cloudinstance-api/openapi_server/controllers/types_controller.py > ../api/cloudinstance-api/openapi_server/controllers/types_controller.py.new
        mv ../api/cloudinstance-api/openapi_server/controllers/types_controller.py.new ../api/cloudinstance-api/openapi_server/controllers/types_controller.py
        docker-compose down
        docker-compose up -d --build
        sleep 10

        
    - name: Set medium instancetype
      working-directory: ${{ github.workspace }}/integration_tests/dataflow_tests/tools/examples/edge-instance-type
      run: |
        name=`hostname`
        local="vicomtech"
        laptop="LPT"
        if [[ $name == *"$local"* || $name == *"$laptop"* ]] ; then ipe=`ip route | grep -v default | grep metric | grep proto | grep src | awk '{print $9}'` ; else ipe=`ip route | grep -v default | grep metric | grep eth0 | grep src | awk '{print $9}' | tail -n +2` ; fi       
        sed s/localhost/$ipe/g set_medium_instance_type.sh > set_medium_instance_type.sh.new
        mv set_medium_instance_type.sh.new set_medium_instance_type.sh
        /bin/bash set_medium_instance_type.sh
        sleep 10

    - name: Execute tests
      working-directory: ${{ github.workspace }}/cloudinstance_api/tests
      run: |
        name=`hostname`
        local="vicomtech"
        laptop="LPT"
        if [[ $name == *"$local"* || $name == *"$laptop"* ]] ; then ipe=`ip route | grep -v default | grep metric | grep proto | grep src | awk '{print $9}'` ; else ipe=`ip route | grep -v default | grep metric | grep eth0 | grep src | awk '{print $9}' | tail -n +2` ; fi       
        sed s/localhost/$ipe/g check_types.sh > check_types.sh.new
        mv check_types.sh.new check_types.sh
        /bin/bash check_types.sh
        sleep 10
 
    - name: Stop edge registration api
      working-directory: ${{ github.workspace }}/registration/deploy/edge
      run: |
        docker-compose down
        sleep 10
    
    - name: Stop cloud_instanceapi
      working-directory: ${{ github.workspace }}/cloudinstance_api/deploy
      run: |
        docker-compose down
        sleep 10

    - name: Stop edgeinstanceapi
      working-directory: ${{ github.workspace }}/orchestrator/api
      run: |
        docker-compose down
        sleep 10   

    - name: Stop discovery service
      working-directory: ${{ github.workspace }}/discovery/src
      run: |
        docker-compose down
        sleep 10

    - name: Stop edge database
      working-directory: ${{ github.workspace }}/registration/deploy/edge/database
      run: |
        docker-compose down
        sleep 10        